<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

<!-- 여행 페이지 -->
<select id="getMyTravelCount" parameterType="travelBoard" resultType="int">
	SELECT COUNT(*)
	  FROM TRAVELBOARDT
	 WHERE USER_ID = #{userId}
</select>
<select id="getMyTravelList" parameterType="travelBoard" resultType="travelBoard">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT  TRAVEL_NO,
			TRAVEL_TITLE,
			TRAVEL_CONTENT,
			TRAVEL_PIC,
			TO_CHAR(TRAVEL_DATE,'YY/MM/DD') TRAVEL_DATE,
			TRAVEL_HIT,
			TRAVEL_LIKE,
			USER_ID
	  FROM  TRAVELBOARDT
	  WHERE USER_ID = #{userId}
   ORDER BY TRAVEL_NO DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<delete id="deleteMyTravelList" parameterType="travelBoard">
	DELETE  FROM TRAVELBOARDT
	<if test="travelNoList != null and travelNoList.length > 0">
		WHERE TRAVEL_NO in
	<foreach collection="travelNoList" item="item"
			open="(" close=")" separator=",">
		#{item}
	</foreach>
	</if>
	<if test="travelNoList == null or not travelNoList.length > 0">
		WHERE TRAVEL_NO = -1
	</if>
</delete>

<!-- 동행 페이지 -->
<select id="getMyPartnerCount" parameterType="partner" resultType="int">
	SELECT COUNT(*)
	  FROM PARTNERT
	 WHERE USER_ID = #{userId}
</select>
<select id="getMyPartnerList" parameterType="partner" resultType="partner">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT  PARTNER_ID,
			PARTNER_TITLE,
			PARTNER_HIT,
			TO_CHAR(PARTNER_DATE, 'YY/MM/DD') PARTNER_DATE,
			PARTNER_PAY,
			PARTNER_CLASS,
			PARTNER_PERS,
			TO_CHAR(PARTNER_START, 'YYYY.MM.DD') PARTNER_START,
			TO_CHAR(PARTNER_END, 'YYYY.MM.DD') PARTNER_END,
			PARTNER_CONDITION,
			P.TINFO_ID,
			TINFO_COUNTRY,
			TINFO_STATE,
			TINFO_CITY,
			USER_ID
	  FROM  PARTNERT P, TRAVELINFOT T
	  WHERE P.TINFO_ID = T.TINFO_ID
	  		AND USER_ID = #{userId}
   ORDER BY PARTNER_ID DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<select id="getMyJoinerList" parameterType="joiner" resultType="joiner">
	SELECT	JOINER_ID,
			JOINER_DATE,
			J.USER_ID,
			J.PARTNER_ID,
			JOINER_CONDITION
	FROM	JOINERT J, PARTNERT P
	WHERE	J.PARTNER_ID = P.PARTNER_ID
			AND P.USER_ID = #{userId}
   ORDER BY JOINER_DATE DESC
</select>
<update id="cancleMyJoinerList" parameterType="joiner">
	UPDATE JOINERT SET JOINER_CONDITION = 'N'
	<if test="joinerNoList != null and joinerNoList.length > 0">
		WHERE USER_ID in
	<foreach collection="joinerNoList" item="item"
			open="(" close=")" separator=",">
		#{item}
	</foreach>
	</if>
	<if test="joinerNoList == null or not joinerNoList.length > 0">
		WHERE USER_ID = -1
	</if>
</update>

<!-- 좋아요 페이지 -->
<select id="getMyLikedCount" parameterType="like" resultType="int">
	SELECT COUNT(*)
	  FROM LIKET
	 WHERE USER_ID = #{userId}
</select>
<select id="getMyLikedTravelList" parameterType="travelBoard" resultType="travelBoard">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT  LIKE_NO,
			LIKE_CATEGORY,
			LIKE_BOARDID,
			L.USER_ID,
			TRAVEL_NO,
			TRAVEL_TITLE,
			TRAVEL_CONTENT,
			TRAVEL_PIC,
			TO_CHAR(TRAVEL_DATE,'YY/MM/DD') TRAVEL_DATE,
			TRAVEL_HIT,
			TRAVEL_LIKE
	  FROM  LIKET L, TRAVELBOARDT T
	 WHERE  L.USER_ID = #{userId}
			AND L.LIKE_CATEGORY = 'T'
			AND L.LIKE_BOARDID = T.TRAVEL_NO
   ORDER BY LIKE_NO DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<select id="getMyLikedPlaceList" parameterType="travelPlace" resultType="travelPlace">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT  LIKE_NO,
			LIKE_CATEGORY,
			LIKE_BOARDID,
			L.USER_ID,
			PLACE_NO,
			PLACE_NAME,
			PLACE_ADDRESS,
			PLACE_LIKE,
			PLACE_DATE,
			PLACE_CONTENT,
			PLACE_TRAVELBOARDNO,
			PLACE_PIC,
			PLACE_TITLE,
			PLACE_VISITDATE
	  FROM  LIKET L, TRAVEL_PLACET P
	 WHERE  L.USER_ID = #{userId}
			AND L.LIKE_CATEGORY = 'P'
			AND L.LIKE_BOARDID = P.PLACE_NO
   ORDER BY LIKE_NO DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<select id="getMyLikedProductList" parameterType="product" resultType="product">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT  LIKE_NO,
			LIKE_CATEGORY,
			LIKE_BOARDID,
			L.USER_ID,
			ITEM_ID,
			ITEM_NAME,
			ITEM_PRICE,
			ITEM_EA,
			ITEM_CONTENT,
			ITEM_METHOD,
			ITEM_CATEGORY,
			SELLER_ID,
			ITEM_ORDERDETAIL,
			ITEM_STAR,
			ITEM_PIC,
			TO_CHAR(ITEM_DATE, 'RR/MM/DD') ITEM_DATE,
			ITEM_CONDITION,
			ITEM_LIKE
	  FROM  LIKET L, ITEMT I
	 WHERE  L.USER_ID = #{userId}
			AND LIKE_CATEGORY = 'I'
			AND L.LIKE_BOARDID = I.ITEM_ID
   ORDER BY LIKE_NO DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<delete id="deleteMyLiked" parameterType="int">
	DELETE FROM LIKET
		  WHERE LIKE_NO = #{value}
</delete>

<!-- 상품 페이지 -->
<select id="getMyProductCount" parameterType="product" resultType="int">
	SELECT COUNT(*)
	  FROM ITEMT
	 WHERE SELLER_ID = #{sellerId}
</select>
<select id="getMyProductList" parameterType="product" resultType="product">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT  ITEM_ID,
			ITEM_NAME,
			ITEM_PRICE,
			ITEM_CONTENT,
			ITEM_CATEGORY,
			SELLER_ID,
			ITEM_ORDERDETAIL,
			ITEM_STAR,
			ITEM_PIC,
			TO_CHAR(ITEM_DATE, 'YYYY/MM/DD') ITEM_DATE,
			ITEM_LIKE
	   FROM ITEMT
	  WHERE SELLER_ID = #{sellerId}
   ORDER BY ITEM_ID DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<delete id="deleteMyProductList" parameterType="product">
	DELETE  FROM ITEMT
	<if test="itemNoList != null and itemNoList.length > 0">
	  WHERE ITEM_ID in
	<foreach collection="itemNoList" item="item"
			open="(" close=")" separator=",">
		#{item}
	</foreach>
	</if>
	<if test="itemNoList == null or not itemNoList.length > 0">
		WHERE ITEM_ID = -1
	</if>
</delete>
<select id="getMyBuyerList" parameterType="order" resultType="order">
	SELECT BUYER_ID,
		   ORDER_ID,
		   TO_CHAR(ORDER_DATE, 'YYYY/MM/DD') ORDER_DATE,
		   ORDER_CONDITION,
		   ORDER_DELIVERY,
		   ORDER_PRICE,
		   ORDER_EA,
		   O.ITEM_ID,
		   ITEM_DELIVERYNO
	  FROM ORDERT O, ITEMT I
	 WHERE O.ITEM_ID = I.ITEM_ID
	       AND O.ITEM_ID = #{itemId}
	       AND I.SELLER_ID = #{sellerId}
</select>
<select id="getMyBuyer" parameterType="order" resultType="order">
	SELECT BUYER_ID,
		   ORDER_ID,
		   TO_CHAR(ORDER_DATE, 'YYYY/MM/DD') ORDER_DATE,
		   ORDER_CONDITION,
		   ORDER_DELIVERY,
		   ORDER_PRICE,
		   ORDER_EA,
		   ORDER_POST,
		   ORDER_ADDRESS,
		   O.ITEM_ID,
		   ITEM_METHOD,
		   ITEM_DELIVERYNO,
		   USER_PHONE,
		   USER_NAME
	  FROM ORDERT O, ITEMT I, USERT U
	 WHERE O.ITEM_ID = I.ITEM_ID
	 	   AND U.USER_ID = O.BUYER_ID
           AND ORDER_ID = #{orderId}
	       AND BUYER_ID =  #{buyerId}
</select>
<update id="updateDno" parameterType="order">
	UPDATE ORDERT SET ITEM_DELIVERYNO = #{itemDeliveryno},
					  ORDER_DELIVERY = '배송중'
				  WHERE ORDER_ID = #{orderId}
</update>

<!-- 거래내역 페이지 -->
<select id="getMyOrderCount" parameterType="order" resultType="int">
	SELECT COUNT(*)
	  FROM ORDERV
	 WHERE BUYER_ID = #{buyerId}
</select>
<select id="getMyOrderList" parameterType="order" resultType="order">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT ORDER_ID,
		   TO_CHAR(ORDER_DATE, 'YYYY/MM/DD') ORDER_DATE,
		   ORDER_CONDITION,
		   ORDER_DELIVERY,
		   ORDER_PRICE,
		   ORDER_EA,
		   O.ITEM_ID,
		   ITEM_NAME,
		   ITEM_METHOD,
		   ITEM_DELIVERYNO,
		   REVIEW_CONTENT,
		   BUYER_ID
	  FROM ORDERT O, ITEMT I
	 WHERE O.ITEM_ID = I.ITEM_ID
	 	   AND BUYER_ID = #{buyerId}
  ORDER BY ORDER_ID DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<select id="getMyOrder" parameterType="order" resultType="order">
	SELECT ORDER_ID,
		   TO_CHAR(ORDER_DATE, 'YYYY/MM/DD') ORDER_DATE,
		   ORDER_CONDITION,
		   ORDER_DELIVERY,
		   ORDER_PRICE,
		   ORDER_EA,
		   ITEM_ID,
		   ITEM_NAME,
		   ITEM_METHOD,
		   ITEM_DELIVERYNO,
		   BUYER_ID
	  FROM ORDERV
	 WHERE ORDER_ID = #{orderId}
</select>
<delete id="deleteMyOrderList" parameterType="order">
	DELETE  FROM ORDERT
	<if test="orderNoList != null and orderNoList.length > 0">
	  WHERE ORDER_ID in
	<foreach collection="orderNoList" item="item"
			open="(" close=")" separator=",">
		#{item}
	</foreach>
	</if>
	<if test="orderNoList == null or not orderNoList.length > 0">
		WHERE ORDER_ID = -1
	</if>
</delete>
<update id="updateOrderCondition" parameterType="order">
	UPDATE ORDERT SET ORDER_DELIVERY = '배송완료',
					  ORDER_CONDITION = '거래완료'
				WHERE ORDER_ID = #{orderId}
</update>

<!-- 리뷰 페이지 -->
<select id="getMyReviewCount" parameterType="order" resultType="int">
	SELECT COUNT(*)
	  FROM ORDERT O, ITEMT I
	 WHERE O.ITEM_ID = I.ITEM_ID
		   AND O.BUYER_ID = #{buyerId}
</select>
<select id="getMyReviewList" parameterType="order" resultType="order">
SELECT B.* FROM ( SELECT A.*, ROWNUM RN FROM ( 
	SELECT BUYER_ID,
		   REVIEW_STAR,
		   REVIEW_CONTENT,
		   TO_CHAR(REVIEW_DATE, 'YYYY/MM/DD') REVIEW_DATE,
		   REVIEW_PIC,
		   ORDER_EA,
		   ORDER_ID,
		   I.ITEM_ID,
		   I.ITEM_NAME
	  FROM ORDERT O, ITEMT I
	 WHERE O.ITEM_ID = I.ITEM_ID
	 	   AND O.BUYER_ID = #{buyerId}
  ORDER BY REVIEW_DATE DESC
) A ) B WHERE RN BETWEEN #{first} AND #{last}
</select>
<select id="getMyReview" parameterType="order" resultType="order">
	SELECT BUYER_ID,
		   REVIEW_STAR,
		   REVIEW_CONTENT,
		   TO_CHAR(REVIEW_DATE, 'YYYY/MM/DD') REVIEW_DATE,
		   REVIEW_PIC,
		   I.ITEM_ID,
		   I.ITEM_NAME,
		   I.SELLER_ID,
		   ORDER_EA,
		   ORDER_ID
	  FROM ORDERT O, ITEMT I
	 WHERE O.ITEM_ID = I.ITEM_ID
	 	   AND O.ORDER_ID = #{orderId}
  ORDER BY REVIEW_DATE DESC
</select>
<update id="insertMyReview" parameterType="order">
	UPDATE ORDERT SET REVIEW_STAR = #{reviewStar},
					  REVIEW_CONTENT = #{reviewContent},
					  REVIEW_DATE = sysdate,
					  REVIEW_PIC = #{reviewPic}
	  			WHERE ORDER_ID = #{orderId}
</update>
<update id="updateMyReview" parameterType="order">
	UPDATE ORDERT SET REVIEW_STAR = #{reviewStar},
					  REVIEW_CONTENT = #{reviewContent},
					  REVIEW_PIC = #{reviewPic}
	  			WHERE ORDER_ID = #{orderId}
</update>
<update id="deleteMyReview" parameterType="order">
	UPDATE ORDERT SET REVIEW_STAR = 0.0,
					  REVIEW_CONTENT = NULL,
					  REVIEW_DATE = NULL,
					  REVIEW_PIC = NULL
	  			WHERE ORDER_ID = #{orderId}
</update>
<select id="updateProductStar" statementType="CALLABLE" parameterType="order">
	{
		CALL PRO_ITEM_STAR ( #{itemId} )
	}
</select>
</mapper>